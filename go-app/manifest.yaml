apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: go-app
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: go-app
  template:
    metadata:
      labels:
        app: go-app
    spec:
      containers:
      - name: go-app
        image: arashgh/uni-project:2d16bc2
        ports:
        - containerPort: 3000
        env:
        - name: ENV_VAR
          value: "production"
  strategy:
    canary:
      steps:
      - setWeight: 25
      - pause: { duration: 60s }
      - analysis:
          templates:
          - templateName: error-rate-check
      - setWeight: 50
      - pause: { duration: 60s }
      - analysis:
          templates:
          - templateName: error-rate-check
      - setWeight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: go-app-service
  labels:
    app: go-app
    monitoring: enable
spec:
  selector:
    app: go-app
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
    nodePort: 30008
  type: NodePort
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    serviceMonitorSelector: prometheus
    release: prometheus
  name: go-app
  namespace: monitoring
spec:
  endpoints:
  - interval: 15s
    targetPort: 3000
    path: /metrics
    scheme: http
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      monitoring: enable
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: error-rate-check
  namespace: default
spec:
  metrics:
  - name: error-rate
    interval: 20s
    successCondition: "result[0] > 0.08"
    provider:
      prometheus:
        address: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(rate(http_requests_total{status_code=~"5.."}[1m])) 
          / 
          sum(rate(http_requests_total[1m]))